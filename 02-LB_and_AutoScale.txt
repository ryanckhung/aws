1. Amazon Web Services defines Elasticity as "The ability to acquire resources as you need them and release resources when you no longer need them."
2. Scaling up = vertical scaling; scaling out = horizontal scaling

3. Auto Scaling includes the concept of Launch Templates and Auto Scaling Group
4. [HOL] Auto Scaling: EC2 Dashboard -> Instances -> Launch Templates -> Launch template is just like telling AWS that you have a EC2 template, which include the image type, machine type, security group, key pair, storage, user template, etc -> back to the EC2 dashboard and select Auto Scaling -> Auto Scaling Groups -> Create Auto Scaling Groups -> Associate the Launch Template just crated with the Auto Scaling Group -> you can select mulitple AZ and subnets for autoscaling -> you can set the desire, min, max number of instances to run -> after the ASG is created, the EC2 instance will automatically created -> Back to the EC2 dashbard, auto scaling and selected the just created Auto Scaling group (ASG), play around and take a look on the monitoring [you shouldn't directly change the setting of EC2 created by ASG; you should goto ASG to update the EC2 instead][delete the ASG will automatically deleted the EC2][you shoun't delete the EC2 which is created by ASG; you should delete the ASG instead][Up to this moment, no load balancer is attached; for testing purpose, you can goto the EC2 dashboard, and find the ASG created EC2, copy the IP/domain name of the EC2 and paste it in the browser (assume the userdata.sh is applied; Nginx is installed)]

5. Load Balancing includes the concept of ALB/NLB and Target Group, the Load Balancer will redirect traffic to difference target group
6. [HOL] Create Target Group -> EC2 Dashboard -> Load Balancing -> Target Groups -> You can create a target group protocol for http (ALB) or TCP (NLB)-> You can not include any EC2 instance in this target group and leave it to update later
7. [HOL] Create NLB (similar to ALB) -> create the Elastic IP for Load Balancer (optional; if not assigned, aws will assign an IP for you), the elastic IP is used to connect to the subnet -> create Load Balancer, EC2 Dashboard, Load Balancers, Create Load Balancer -> Forward the listener (eg. TCP @ port 80) to the Target Groups which created before -> After created the Load Balancer, copy it's endpoint name -> if you following the lab, the target groups should be empty -> back to the ASG and select the created ASG instance, goto load balancing option under the ASG instance, attach the newly created Target Group to the ASG instance -> after that the target group will auto include the instance stated in the ASG, you can go back to target group and see if new instance is inside the target group

8. [*****] The relationship for all component to link up together: Launch Template <-> ASG <-> Target Group <-> Load Balancer 

9. [HOL] Query String Routing: Create an EC2 instance -> Create a target group, add the newly created instance to this target group [this target group won't have auto scaling] -> Goto the created ALB, Listener, Edit/Add Listener, if you want to attach the target to the http:80 (which used beofre), then choose edit the http:80, add rule, query string
