Reference link:
https://medium.com/@jmn8718/setup-efs-with-ecs-fargate-8017a6dca5ef
Docker Hub; docker image we used in this example
https://hub.docker.com/repository/docker/ryanckhung/gen_file
Please refer to ec2_efs.txt for basic skill

<Step 1> Goto EC2, Create the Security Groups with in bound NFS port enable
<Step 2> Goto EFS, Create the EFS with Networking assign the NFS enabled Security Groups; also create the Access Point
<Step 3> Goto ECS, Create Cluster
<Step 4> Goto ECS (use old AWS portal), Create Task (just like pod in K8s); 
Make the task with
Task role: ecsTaskExecutionRole
Operating system family: Linux
Task execution: roleecsTaskExecutionRole
Task memory: 1GB
Task CPU: 0.5vCPU

Add volume and point it to the EFS with the following config:
Volume type: EFS
File System ID: as created
Access Point ID: as created
Root Directory: /
Encryption in transit: ENABLED
EFS IAM authorization: ENABLED

Click the "Add container" button
Container Name: "anything you like"
Image: ryanckhung/gen_file
Goto Storage and Logging, Set 
Mount points: Source volume: <the efs you created before>, Container Path: /usr/src/app/data <the path inside the container>


<Step 5> Back to ECS, goto the Task Definitions, Actions, Create Service
Then the docker should keep writing to the EFS

<Step 6> Create a EC2 to check the file in the EFS 
Please refer to "ec2_efs.txt" in this git repo.
