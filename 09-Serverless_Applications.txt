Serverless means don’t have manage anything underneath the platform; you don’t need to care about the loading (it will automatically adjusted for you), no need to manage EC2, no need to install patches or update software;  Serverless services includes Lambda (run compute functions), SNS, SQS, API Gateway.

Serverless Services and Event-Driven Architecture; you can have serverless compute, storage, database services; you don't manage it the service can scale seamelessly; event drivern, e.g., upload file to S3 -> S3 use event notification to trigger lambda function to process the file -> lambda update theh file and store in othehr s3 bucket -> at the same time Lambda can trigger the SQS Queue -> use the other lambda function to consume the SQS Queue -> the other lambda function process the data and store it to theh DynamoDB

AWS Lambda is a serverless compute service which runs function; upload your code to lambda and wait for something to trigger that function; pay for execution time and thhe allocated resource only; functions execution can run up to 15 minutes (can't run function more that 15 mins run time); Use case: data processing, file processing, event source mapping (map data from one service to the other service, eg. S3 to SQS); Lambda function can run concurrently, that is one lambda function which trigger by N events at theh same time, then N lambda function with the same code can run concurrently;

[HOL] Create Simple Lambda Function: 
