ECS is the AWS service that allows us to run docker containers.
ECS cluster is a logical grouping of tasks/services. (tasks in AWS is similar to pod in k8s and container in docker)
Task definition is used to describe to task. (like dockerfile or yaml in k8s)
ECR is Elastic Container Registry which store the private repositories (docker images).
ECS serices are used to maintain a desired count of tasks.

https://cloudonaut.io/ecs-vs-fargate-whats-the-difference/
Amazon ECS can have two implementation method: 1. tarditional Amazon EC2 or 2. Serverless AWS Fargate
An ECS container instance is nothing more than an EC2 instance that runs the ECS Container Agent. The EC2 instance is owned and managed by you. The instance appears in the list of EC2 instances like any other EC2 instance. The ECS Container Agent regularly polls the ECS API if new containers need to be started or stopped. Usually, you run a cluster of container instances in an auto-scaling group. ECS is free of charge. You only pay for the EC2 instances. The downside is that you have to scale, monitor, patch, and secure the EC2 instances yourself.
AWS Fargate manages the task execution. No EC2 instances to manage anymore. You pay for running tasks. Thatâ€™s it. As easy as it sounds.


[HOL] Launch Task on AWS Fargate: ECS Dashboard -> Get Start -> four steps, define container and task (deploy as fargate), define service, define cluster and review -> just follow it step by step (easy) -> after created, goto clusters and select the newly created cluster -> click the tasks tab (task in AWS = container in docker), you can see the newly created task, you can keep adding tasks in -> click the newly created task copy the public IP address and put it in the browswer (assume nginx image is used)

